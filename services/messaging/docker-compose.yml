version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: messaging
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-m", "8222"]
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  messaging:
    build: .
    ports:
      - "9097:9097"
    environment:
      - MESSAGING_DATABASE_HOST=postgres
      - MESSAGING_DATABASE_PORT=5432
      - MESSAGING_DATABASE_NAME=messaging
      - MESSAGING_DATABASE_USER=postgres
      - MESSAGING_DATABASE_PASSWORD=postgres
      - MESSAGING_REDIS_HOST=redis
      - MESSAGING_REDIS_PORT=6379
      - MESSAGING_NATS_URL=nats://nats:4222
      - MESSAGING_AUTH_JWT_SECRET=your-secret-key-change-in-production
      - MESSAGING_LOGGING_LEVEL=info
      - MESSAGING_LOGGING_FORMAT=json
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
